# tasks file can include smaller files if warranted
# - name: Ensure Docker image is built from the test Dockerfile.
#   docker_image:
#     name: test
#     source: build
#     build:
#       path: files
#     state: present

# - name: Ensure the test container is running.
#   docker_container:
#     image: test:latest
#     name: test
#     state: started

# - name: Install aptitude using apt
#   apt: name=aptitude state=latest update_cache=yes force_apt_get=yes

# - name: Install required system packages
#   apt: name={{ item }} state=latest update_cache=yes
#   loop: [ 'apt-transport-https', 'ca-certificates', 'curl', 'software-properties-common', 'python3-pip', 'virtualenv', 'python3-setuptools']

# - name: Add Docker GPG apt Key
#   apt_key:
#     url: https://download.docker.com/linux/ubuntu/gpg
#     state: present

# - name: Add Docker Repository
#   apt_repository:
#     repo: deb https://download.docker.com/linux/ubuntu bionic stable
#     state: present

# - name: Update apt and install docker-ce
#   apt: update_cache=yes name=docker-ce state=latest

# - name: Install Docker Module for Python
#   pip:
#     name: docker

- name: Pull default Docker image
  docker_image:
    name: "{{ default_container_image }}"
    source: pull
  become: true

# Creates the number of containers defined by the variable create_containers, using values from vars file
- name: Create default containers
  become: true
  docker_container:
    name: "{{ default_container_name }}{{ item }}"
    image: "{{ default_container_image }}"
    command: "{{ default_container_command }}"
    state: present
  with_sequence: count={{ create_containers }}